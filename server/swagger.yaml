openapi: 3.0.0
info:
  title: User API
  description: API for managing users
  version: 1.0.0
servers:
  - url: http://localhost:8080/api/v1
    description: Local server

tags:
  - name: Users
    description: Operations related to users

paths:
  /register:
    get:
      tags:
        - Users
      summary: Get all users
      responses:
        "200":
          description: A list of users
          headers:
            Set-Cookie:
              description: The session cookie
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
    post:
      tags:
        - Users
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "201":
          description: User created successfully
          headers:
            Set-Cookie:
              description: The session cookie
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

  /users/{id}:
    get:
      tags:
        - Users
      summary: Get a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        "200":
          description: A single user
          headers:
            Set-Cookie:
              description: The session cookie
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
    put:
      tags:
        - Users
      summary: Update a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        "200":
          description: User updated successfully
          headers:
            Set-Cookie:
              description: The session cookie
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: User not found
    delete:
      tags:
        - Users
      summary: Delete a user by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
          description: The user ID
      responses:
        "204":
          description: User deleted successfully
          headers:
            Set-Cookie:
              description: The session cookie
              schema:
                type: string
        "404":
          description: User not found

components:
  schemas:
    User:
      type: object
      required:
        - name
        - email
        - full_name
      properties:
        id:
          type: string
          description: The unique identifier for the user
        name:
          type: string
          description: The name of the user
        email:
          type: string
          description: The email of the user
        full_name:
          type: string
          description: The full name of the user
